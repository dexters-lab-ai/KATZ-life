export function formatTrendingToken(networkSegment) {
  return token => ({
    rank: token.rank,
    address: token.mainToken.address,
    symbol: token.mainToken.symbol || 'Unknown',
    name: token.mainToken.name || 'Unknown',
    dextoolsUrl: `https://www.dextools.io/app/en/${networkSegment}/pair-explorer/${token.mainToken.address}`
  });
}

export function formatAnalysisMessage(tokenInfo, score, audit, price, liquidity, poolData, network) {
  const message = `
*Token Analysis* üîç

*Token Info:*
‚Ä¢ Name: ${tokenInfo?.name || 'Unknown'}
‚Ä¢ Symbol: ${tokenInfo?.symbol || 'Unknown'}
${tokenInfo?.logo ? '‚Ä¢ Logo: [View]('+tokenInfo.logo+')' : ''}

*Contract Address:*
\`${tokenInfo?.address}\`

*Security Score:*
‚Ä¢ Total Score: ${score?.dextScore?.total || 0}/100
‚Ä¢ Information: ${score?.dextScore?.information || 0}/100
‚Ä¢ Pool: ${score?.dextScore?.pool || 0}/100
‚Ä¢ Holders: ${score?.dextScore?.holders || 0}/100

*Security Audit:*
‚Ä¢ Open Source: ${formatAuditValue(audit?.isOpenSource)}
‚Ä¢ Honeypot Risk: ${formatAuditValue(audit?.isHoneypot)}
‚Ä¢ Mintable: ${formatAuditValue(audit?.isMintable)}
‚Ä¢ Buy Tax: ${formatTaxValue(audit?.buyTax)}
‚Ä¢ Sell Tax: ${formatTaxValue(audit?.sellTax)}
‚Ä¢ Contract Renounced: ${formatAuditValue(audit?.isContractRenounced)}

*Price Info (24h):*
‚Ä¢ Current: $${formatNumber(price?.price)}
‚Ä¢ Change: ${formatNumber(price?.variation24h)}%
‚Ä¢ Volume: $${formatNumber(price?.volume24h)}
‚Ä¢ Buys/Sells: ${price?.buys24h || 0}/${price?.sells24h || 0}

*Liquidity Info:*
‚Ä¢ Total Value: $${formatNumber(liquidity?.liquidity)}
‚Ä¢ Token Reserve: ${formatNumber(liquidity?.reserves?.mainToken)}
‚Ä¢ Pair Reserve: ${formatNumber(liquidity?.reserves?.sideToken)}

*Pool Info:*
‚Ä¢ Exchange: ${poolData?.exchangeName || 'Unknown'}
‚Ä¢ Created: ${new Date(poolData?.creationTime).toLocaleString()}
‚Ä¢ Fee: ${poolData?.fee || 0}%

*Social Links:*
${formatSocialLinks(tokenInfo?.socialInfo)}

*View on DexTools:*
[Open in DexTools](https://www.dextools.io/app/en/${network}/pair-explorer/${tokenInfo?.address})

_Last Updated: ${new Date().toLocaleString()}_
`.trim();

  if (!message) {
    throw new Error('Failed to format analysis message');
  }

  return message;
}

export function formatSocialLinks(socialInfo) {
  if (!socialInfo) return 'No social links available';
  
  const links = [];
  if (socialInfo.twitter) links.push(`‚Ä¢ [Twitter](${socialInfo.twitter})`);
  if (socialInfo.telegram) links.push(`‚Ä¢ [Telegram](${socialInfo.telegram})`);
  if (socialInfo.website) links.push(`‚Ä¢ [Website](${socialInfo.website})`);
  
  return links.length > 0 ? links.join('\n') : 'No social links available';
}

export function formatAuditValue(value) {
  if (!value) return '‚ùì';
  return value.toLowerCase() === 'true' ? '‚úÖ' : '‚ùå';
}

export function formatTaxValue(tax) {
  if (!tax) return 'N/A';
  return `${tax.min || 0}-${tax.max || 0}%`;
}

export function formatNumber(num) {
  if (!num) return '0.00';
  return Number(num).toLocaleString(undefined, {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  });
}